#! /bin/bash
#
# This file is part of rjk-nntp-tools
# Copyright (C) 2010, 11 Richard Kettlewell
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

set -e

# s COMMAND...
#
# Echo a command then execute it.
s() {
  echo "$@" >&2
  "$@"
}

# r HOST COMMAND...
#
# Echo a command then execute it remotely.
r() {
  local host=$1
  shift
  echo "$host:" "$@" >&2
  ssh $host "$@"
}

# build HOST ARCH
#
# Create a .deb on HOST for architecture ARCH, then copy it back here
# and add it to the list of build products.
build() {
  local host=$1
  local arch=$2
  local debs

  for b in $binpkgs; do
    debs="$debs ${b}_${version}_${arch}.deb"
  done
  echo
  echo "Build on $host for $arch"
  echo
  r $host "mkdir -p _builds"
  r $host "cd _builds && rm -rf ${source} ${archive} ${debs}"
  s scp ${archive} $host:_builds/.
  r $host "cd _builds && tar xfz ${archive}"
  r $host "cd _builds/${source} && debian/rules build"
  r $host "cd _builds/${source} && fakeroot debian/rules binary"
  for deb in $debs; do
    s scp $host:_builds/$deb .
    products="$products $deb"
  done
  echo
  echo "Built $debs"
  echo
}

# Build the source archive
s make distcheck

srcpkg=rjk-nntp-tools                    # source package name
binpkgs="rjk-nntp-tools rjk-spoolstats"  # binary packages
version=$(make echo-version)    # get version number
source=${srcpkg}-${version}     # source directory
archive=${srcpkg}-${version}.tar.gz # tarball

products="$archive"

# Build .deb files
s build araminta amd64          # squeeze
s build sandestin i386          # squeeze

# List built products
echo
echo Final build products:
echo
ls -l ${products}

# ...and on a single line for easy C+P
echo
echo ${products}
